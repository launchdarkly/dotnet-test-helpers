version: 2.1

orbs:
  win: circleci/windows@1.0.0

workflows:
  version: 2
  test:
    jobs:
      # Even though LaunchDarkly.TestHelpers only has two build targets-- .NET Standard 2.0
      # and .NET Framework 4.5.2-- we run the tests in a variety of runtime platforms. That's
      # because there can be subtle differences in how APIs like System.Net.HttpListener
      # behave across platforms, so we want to make sure these tools work consistently in all
      # of them. The oldest one, .NET Core 2.0, is no longer a supported platform in current
      # LaunchDarkly tools; we still test it because in some of our projects, .NET Core 2.0
      # might be the only way to specifically test the .NET Standard 2.0 implementation of a
      # package (e.g. if there is also a different build target for .NET Core 2.1).
      - test-netcore:
          name: .NET Core 2.0
          docker-image: microsoft/dotnet:2.0-sdk-jessie
          test-target-framework: netcoreapp2.0
      - test-netcore:
          name: .NET Core 2.1
          docker-image: mcr.microsoft.com/dotnet/core/sdk:2.1-focal
          test-target-framework: netcoreapp2.1
      - test-netcore:
          name: .NET Core 3.1
          docker-image: mcr.microsoft.com/dotnet/core/sdk:3.1-focal
          test-target-framework: netcoreapp3.1
      - test-netcore:
          name: .NET 5.0
          docker-image: mcr.microsoft.com/dotnet/sdk:5.0-focal
          test-target-framework: net5.0
      - test-windows-netframework:
          name: .NET Framework 4.5.2
          test-target-framework: net452

jobs:
  test-netcore:
    parameters:
      docker-image:
        type: string
      test-target-framework:
        type: string
    docker:
      - image: <<parameters.docker-image>>
    environment:
      ASPNETCORE_SUPPRESSSTATUSMESSAGES: true
      TESTFRAMEWORK: <<parameters.test-target-framework>>
    steps:
      - checkout
      - run: dotnet build src/LaunchDarkly.TestHelpers -f netstandard2.0
      - run: dotnet test test/LaunchDarkly.TestHelpers.Tests/LaunchDarkly.TestHelpers.Tests.csproj

  test-windows-netframework:
    parameters:
      test-target-framework:
        type: string
    executor:
      name: win/vs2019
      shell: powershell.exe
    environment:
      TESTFRAMEWORK: <<parameters.test-target-framework>>
    steps:
      - checkout
      - run: dotnet build src/LaunchDarkly.TestHelpers -f net452
      - run: dotnet test test/LaunchDarkly.TestHelpers.Tests/LaunchDarkly.TestHelpers.Tests.csproj
